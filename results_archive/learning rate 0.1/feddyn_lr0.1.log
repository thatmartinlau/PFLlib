==================================================
goal = test
device = cuda
device_id = 0
dataset = MNIST
num_classes = 10
model = CNN
batch_size = 64
local_learning_rate = 0.1
learning_rate_decay = False
learning_rate_decay_gamma = 0.99
global_rounds = 50
top_cnt = 100
local_epochs = 5
algorithm = FedDyn
join_ratio = 0.8
random_join_ratio = False
num_clients = 20
prev = 0
times = 1
eval_gap = 1
save_folder_name = items
auto_break = False
dlg_eval = False
dlg_gap = 100
batch_num_per_client = 2
num_new_clients = 0
fine_tuning_epoch_new = 0
feature_dim = 512
vocab_size = 32000
max_len = 200
client_drop_rate = 0.0
train_slow_rate = 0.0
send_slow_rate = 0.0
time_select = False
time_threthold = 10000
beta = 0.0
lamda = 1.0
mu = 0.0
K = 5
p_learning_rate = 0.01
M = 5
itk = 4000
alphaK = 1.0
sigma = 1.0
alpha = 0.1
plocal_epochs = 1
tau = 1.0
fine_tuning_epochs = 10
dr_learning_rate = 0.0
L = 1.0
noise_dim = 512
generator_learning_rate = 0.005
hidden_dim = 512
server_epochs = 1000
localize_feature_extractor = False
server_learning_rate = 1.0
eta = 1.0
rand_percent = 80
layer_idx = 2
mentee_learning_rate = 0.005
T_start = 0.95
T_end = 0.98
momentum = 0.1
kl_weight = 0.0
prune_interval = 5
prune_amount = 0.5
==================================================

============= Running time: 0th =============
Creating server and clients ...
FedAvgCNN(
  (conv1): Sequential(
    (0): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
  )
  (conv2): Sequential(
    (0): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
  )
  (fc1): Sequential(
    (0): Linear(in_features=1024, out_features=512, bias=True)
    (1): ReLU(inplace=True)
  )
  (fc): Linear(in_features=512, out_features=10, bias=True)
)

Join ratio / total clients: 0.8 / 20
Finished creating server and clients.

-------------Round number: 0-------------

Evaluate global model
Averaged Train Loss: 2.3125
Averaged Test Accurancy: 0.0583
Averaged Test AUC: 0.4299
Std Test Accurancy: 0.0526
Std Test AUC: 0.1484
-------------------------------------------------- 7.493879079818726

-------------Round number: 1-------------

Evaluate global model
Averaged Train Loss: 2.1992
Averaged Test Accurancy: 0.2766
Averaged Test AUC: 0.7016
Std Test Accurancy: 0.3356
Std Test AUC: 0.3075
-------------------------------------------------- 7.299762487411499

-------------Round number: 2-------------

Evaluate global model
Averaged Train Loss: 2.2856
Averaged Test Accurancy: 0.2470
Averaged Test AUC: 0.7674
Std Test Accurancy: 0.2786
Std Test AUC: 0.1432
-------------------------------------------------- 7.1006975173950195

-------------Round number: 3-------------

Evaluate global model
Traceback (most recent call last):
  File "/users/eleves-a/2022/martin-alexander.lau/cloudcomputing1/PFLlib/system/main.py", line 560, in <module>
    run(args)
  File "/users/eleves-a/2022/martin-alexander.lau/cloudcomputing1/PFLlib/system/main.py", line 409, in run
    server.train()
  File "/users/eleves-a/2022/martin-alexander.lau/cloudcomputing1/PFLlib/system/flcore/servers/serverdyn.py", line 56, in train
    self.evaluate()
  File "/users/eleves-a/2022/martin-alexander.lau/cloudcomputing1/PFLlib/system/flcore/servers/serverbase.py", line 286, in evaluate
    stats = self.test_metrics()
            ^^^^^^^^^^^^^^^^^^^
  File "/users/eleves-a/2022/martin-alexander.lau/cloudcomputing1/PFLlib/system/flcore/servers/serverbase.py", line 260, in test_metrics
    ct, ns, auc = c.test_metrics()
                  ^^^^^^^^^^^^^^^^
  File "/users/eleves-a/2022/martin-alexander.lau/cloudcomputing1/PFLlib/system/flcore/clients/clientbase.py", line 134, in test_metrics
    auc = metrics.roc_auc_score(y_true, y_prob, average='micro')
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/users/eleves-a/2022/martin-alexander.lau/.conda/envs/mf/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/users/eleves-a/2022/martin-alexander.lau/.conda/envs/mf/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/users/eleves-a/2022/martin-alexander.lau/.conda/envs/mf/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1064, in check_array
    _assert_all_finite(
  File "/users/eleves-a/2022/martin-alexander.lau/.conda/envs/mf/lib/python3.11/site-packages/sklearn/utils/validation.py", line 123, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/users/eleves-a/2022/martin-alexander.lau/.conda/envs/mf/lib/python3.11/site-packages/sklearn/utils/validation.py", line 172, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.
